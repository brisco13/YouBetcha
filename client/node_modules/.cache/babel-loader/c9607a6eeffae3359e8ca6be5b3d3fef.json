{"ast":null,"code":"export default function asyncIterator(source) {\n  var _a;\n\n  var iterator = source[Symbol.asyncIterator]();\n  return _a = {\n    next: function () {\n      return iterator.next();\n    }\n  }, _a[Symbol.asyncIterator] = function () {\n    return this;\n  }, _a;\n}","map":{"version":3,"mappings":"AAKA,eAAc,SAAUA,aAAV,CACZC,MADY,EACoB;;;EAEhC,IAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAACH,aAAR,CAAN,EAAjB;EACA;IACEI,IAAI,EAAJ;MACE,OAAOF,QAAQ,CAACE,IAAT,EAAP;IACD;EAHH,GAIEC,GAACF,MAAM,CAACH,aAAR;IACE,OAAO,IAAP;EACD,CANH;AAQD","names":["asyncIterator","source","iterator","Symbol","next","_a"],"sources":["/Users/amccorkl/Computer/Project3/YouBetcha/client/node_modules/@apollo/src/link/http/iterators/async.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\n\nexport default function asyncIterator<T>(\n  source: AsyncIterableIterator<T>\n): AsyncIterableIterator<T> {\n  const iterator = source[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterableIterator<T> {\n      return this;\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}