{"ast":null,"code":"import { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n  var cleanup = null;\n  var error = null;\n  var done = false;\n  var data = [];\n  var waiting = [];\n\n  function onData(chunk) {\n    if (error) return;\n\n    if (waiting.length) {\n      var shiftedArr = waiting.shift();\n\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({\n          value: chunk,\n          done: false\n        });\n      }\n    }\n\n    data.push(chunk);\n  }\n\n  function onError(err) {\n    error = err;\n    var all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n\n  function onEnd() {\n    done = true;\n    var all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({\n        value: undefined,\n        done: true\n      });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext() {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({\n        value: data.shift(),\n        done: false\n      });\n      if (done) return resolve({\n        value: undefined,\n        done: true\n      });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  var iterator = {\n    next: function () {\n      return getNext();\n    }\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  return iterator;\n}","map":{"version":3,"mappings":"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","names":["canUseAsyncIteratorSymbol","nodeStreamIterator","stream","cleanup","error","done","data","waiting","onData","chunk","length","shiftedArr","shift","Array","isArray","value","push","onError","err","all","slice","forEach","pair","onEnd","undefined","removeListener","on","getNext","Promise","resolve","reject","iterator","next","Symbol","asyncIterator"],"sources":["/Users/amccorkl/Computer/Project3/YouBetcha/client/node_modules/@apollo/src/link/http/iterators/nodeStream.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n"]},"metadata":{},"sourceType":"module"}